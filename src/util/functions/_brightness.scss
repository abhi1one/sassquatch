// Perceived Brightness
//
// get "brightness" of a color on a scale of 0-255
// based on yiq color space
// -------------------------------------------------------------

@function getPerceivedBrightness( $color ) {
	$R: red($color);
	$G: green($color);
	$B: blue($color);

	@return floor( ( ($R * 299) + ($G * 587) + ($B * 114) )/1000 );
}



// isDark/isLight
//
// is this color what we would call "dark" or "light"?
// -------------------------------------------------------------
$brightness_threshold: 160;

@function isDark( $color, $threshold: $brightness_threshold ) {
	@return ( getPerceivedBrightness($color) <= $threshold );
}

/*
 *@function isLight( $color, $threshold: $brightness_threshold ) {
 *   @return !
 *}
 */



// getContrastTextColor
//
// returns dark or light text color that has sufficient contrast
// with provided color
// -------------------------------------------------------------
$contrast_color_white: #fff;
$contrast_color_black: #222;

@function getContrastTextColor( $color ) {
	@if isDark($color) {
		@return $contrast_color_white;
	} @else {
		@return $contrast_color_black;
	}
}



// getContrastingOffset
//
// returns a contrasting shade or tint of a given color depending
// on if it's light or dark
// -------------------------------------------------------------
@function getContrastingOffset( $color, $offset: 98% ) {

	// super dark colors
	@if getPerceivedBrightness($color) <= 40 {
		@return mix($color, #fff, 33%)
	}

	// ligher colors
	@if isDark($color) {
		@return tint($color, $offset);
	} @else {
		@return shade($color, $offset);
	}
}
